server:
  servlet.context-path: /gs
  port: ${SERVER_PORT:8080}

management:
  server:
    port: 9090
  endpoints:
    web:
      base-path: /
      exposure.include: health,env,beans,metrics


spring:
  datasource:
    driverClassName: org.postgersql.Driver
    url: jdbc:postgresql://db:5432/gs
    username: gs
    password: ${DB_PASSWORD}

  jpa:
    hibernate.ddl-auto: validate
    # show-sql: true
    # properties.hibernate.format_sql: true
  database-platform: org.hibernate.dialect.PostgreSQL16Dialect

  liquibase:
    change-log: classpath:db/changelog/changelog-main.xml


app:
  scheduling:
    enable: ${SCHEDULING_ENABLE:false}
    period: 60000 #ms
    priceIncreasePercentage: 10.1
    optimization:
      type: ${SCHEDULING_OPTIMIZATION_TYPE:optimized-my}  # optimized # optimized-my (for h2) # any other means simple
      exclusive-lock: true
      docker-file-path: ${DOCKER_FILE_PATH:false} # for optimized-my running in docker
  prepare-db.db-products-generator: ${DB_PRODUCTS_GENERATOR:false}
  currency-service.type: ${CURRENCY_SERVICE_TYPE:real} # real # mock

  minio-service:
    bucket-name: ${MINIO_BUCKET_NAME:bucket}
    access-key-id: ${MINIO_ACCESS_KEY_ID:minio}
    secret-access-key: ${MINIO_SECRET_KEY:minio123}
    endpoint: ${MINIO_ENDPOINT:http://127.0.0.1:9000}

  kafka:
    enabled: false
    bootstrapAddress: ${KAFKA_BOOTSTRAP_ADDRESS:http://localhost:9091}
    groupId: product-service

currency-service:
  host: http://localhost:8088
  method:
    get-currencies: /app-currency/v1/currencies
  timeout: 2000 #ms

account-service:
  host: http://localhost:8088
  method:
    get-account-numbers: /account-service/numbers
  timeout: 300000 #ms

crm-service:
  host: http://localhost:8088
  method:
    get-inns: /crm-service/inns
  timeout: 300000 #ms

logging:
  level:
    org.hibernate:
      SQL: TRACE
      type: INFO
      orm.jdbc.bind: INFO